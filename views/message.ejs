<!-- public/index.html -->
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Socket Chat App</title>
</head>

<body>
  <div class="chat-container">
    <div class="room-list">
      <ul>
        <!-- Room list will be displayed here -->
      </ul>
    </div>
    <div class="chat">
      <div class="messages">
        <ul>
          <% messages.forEach(message=> { %>
            <li>
              <%= message.createdAt %>: <%= message.content %>
            </li>
            <!-- <li><%= message.createdAt %>: <%= message.file %></li> -->
            <% if (message.file) { %>
              <li><img src="/uploads/thumbnail/<%= message.file %>" alt="image" width="200" height="150" /></li>
              <br>
              <% } %>
                <% }); %>
        </ul>
        <ul id="message-list">
          <!-- Messages will be displayed here -->
        </ul>
      </div>
      <div class="input-container">
        <form id="messageSend" enctype="multipart/form-data">
          <input type="text" name="senderId" placeholder="Sender ID">
          <input type="text" name="receiverId" placeholder="Receiver ID">
          <input id="message-input" type="text" name="content" placeholder="Type your message...">
          <input id="image-input" type="file" name="image" accept="image/*">
          <button id="send-button" type="button">Send</button>
        </form>
      </div>
    </div>
  </div>
  <script src="/socket.io/socket.io.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
    // Function to resize and display the image preview
  function resizeAndDisplayImage(file) {
    const reader = new FileReader();
    reader.onload = function(event) {
      const img = new Image();
      img.src = event.target.result;

      // Resize the image to the desired dimensions
      const maxWidth = 200;
      const maxHeight = 150;
      const canvas = document.createElement('canvas');
      const ctx = canvas.getContext('2d');

      let width = img.width;
      let height = img.height;

      if (width > maxWidth) {
        height *= maxWidth / width;
        width = maxWidth;
      }

      if (height > maxHeight) {
        width *= maxHeight / height;
        height = maxHeight;
      }

      canvas.width = width;
      canvas.height = height;
      ctx.drawImage(img, 0, 0, width, height);

      // Display the resized image
      const preview = document.getElementById('image-preview');
      preview.innerHTML = ''; // Clear previous content
      preview.appendChild(canvas);
    };

    reader.readAsDataURL(file);
  }
    $(document).ready(function () {
      const socket = io();

      // Join a room
      const room = prompt('Enter a room name:');
      socket.emit('joinRoom', room);

      // Send a message
      $('#send-button').on('click', function (e) {
        e.preventDefault(); // Prevent the default form submission

        const message = $('#message-input').val();
        console.log(message)
        socket.emit('sendMessage', { room, message });
        
        // Get the form containing the input elements
        var form = $('#messageSend')[0]; // Use the form's ID

        // FormData object
        var formData = new FormData(form);
       
        

        $.ajax({
          url: '/messages',
          type: 'POST',
          data: formData, // Send the FormData object directly
          contentType: false, // Set contentType to false for FormData
          processData: false, // Set processData to false as we're sending FormData
          success: function (data) {
            console.log(data);
          },
          error: function (error) {
            console.error('Error:', error);
          }
        });
      });

      // Send an image
      $('#image-input').on('change', function (e) {
      const imageFile = e.target.files[0];
      resizeAndDisplayImage(imageFile);

      const reader = new FileReader();
      reader.onload = function () {
        const imageSrc = reader.result;
        socket.emit('sendImage', { room, image: imageSrc });
      };

      if (imageFile) {
        reader.readAsDataURL(imageFile);
      }
    });

      // Receive messages
      socket.on('message', function (message) {
        $('#message-list').append($('<li>').text(message));
      });

      // Receive images
      socket.on('image', function (imageSrc) {
        $('#message-list').append($('<li>').append($('<img>').attr('src', imageSrc)));
      });
    });
  </script>
</body>

</html>